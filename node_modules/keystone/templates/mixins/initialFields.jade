mixin initialField(field, submitted)
	if field.type == 'text'
		+initialField_text(field, submitted)
	else if field.type == 'textarea'
		+initialField_textarea(field, submitted)
	else if field.type == 'key'
		+initialField_key(field, submitted)
	else if field.type == 'email'
		+initialField_email(field, submitted)
	else if field.type == 'url'
		+initialField_url(field, submitted)
	else if field.type == 'password'
		+initialField_password(field, submitted)
	else if field.type == 'name'
		+initialField_name(field, submitted)
	else if field.type == 'date'
		+initialField_date(field, submitted)
	else if field.type == 'datetime'
		+initialField_datetime(field, submitted)
	else if field.type == 'number'
		+initialField_number(field, submitted)
	else if field.type == 'money'
		+initialField_money(field, submitted)
	else if field.type == 'boolean'
		+initialField_boolean(field, submitted)
	else if field.type == 'select'
		+initialField_select(field, submitted)
	else if field.type == 'relationship'
		+initialField_relationship(field, submitted)

mixin initialField_text_common(type, field, submitted, cls)
	.field(class='type-' + type)
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			if field.noedit
				.field-value= value
			else
				input(type='text', name=field.path, value=submitted[field.path], class=cls, autocomplete='off').form-control
			if field.note
				.field-note= field.note

mixin initialField_text(field, submitted)
	+initialField_text_common('text', field, submitted)

mixin initialField_key(field, submitted)
	+initialField_text_common('key', field, submitted, 'code')

mixin initialField_email(field, submitted)
	+initialField_text_common('email', field, submitted)

mixin initialField_url(field, submitted)
	+initialField_text_common('url', field, submitted)

mixin initialField_date(field, submitted)
	+initialField_text_common('date', field, submitted, 'ui-datepicker')

mixin initialField_number(field, submitted)
	+initialField_text_common('number', field, submitted)

mixin initialField_money(field, submitted)
	+initialField_text_common('money', field, submitted)

mixin initialField_textarea(field, submitted)
	.field.type-textarea
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			textarea(name=field.path).form-control= submitted[field.path]
			if field.note
				.field-note= field.note

mixin initialField_name(field, submitted)
	.field.type-name
		label.field-label= field.label
		.field-ui
			.row
				.col-sm-6: input(type='text', name=field.paths.first, autocomplete='off', placeholder='first name', value=submitted[field.paths.first]).form-control
				.col-sm-6: input(type='text', name=field.paths.last, autocomplete='off', placeholder='last name', value=submitted[field.paths.last]).form-control
			if field.note
				.field-note= field.note


mixin initialField_password(field, submitted)
	.field.type-password
		label.field-label= field.label
		.field-ui
			.row
				.col-sm-6: input(type='password', name=field.path, autocomplete='off', value=submitted[field.path], placeholder='Set password').form-control
				.col-sm-6: input(type='password', name=field.paths.confirm, autocomplete='off', value=submitted[field.paths.confirm], placeholder='Confirm password').form-control
			if field.note
				.field-note= field.note


mixin formField_datetime(field, item)
	.field.type-datetime
		label.field-label= field.label
		.field-ui(class='width-' + field.width)
			.form-row
				.col-sm-6: input(type='text', name=field.paths.date, value=submitted[field.paths.date], placeholder='YYYY-MM-DD', autocomplete='off').form-control.ui-datepicker
				.col-sm-6: input(type='text', name=field.paths.time, value=submitted[field.paths.time], placeholder='HH:MM:SS am/pm', autocomplete='off').form-control
		if field.note
			.field-note= field.note

mixin initialField_boolean(field, submitted)
	.field.type-boolean
		.field-ui(class=field.indent ? 'field-indented' : false)
			label(for=field.path).checkbox
				input(type='checkbox', name=field.path, id=field.path, value='true', checked=(submitted[field.path] == 'true'))
				=' ' + field.label
			if field.note
				.field-note &mdash; #{field.note}

mixin initialField_select(field, submitted)
	.field.type-select
		label.field-label= field.label
		.field-ui
			select(name=field.path).ui-select2
				option(value='')
				each opt in field.ops
					option(value=opt.value, selected=(submitted[field.path] == opt.value))= opt.label
			if field.note
				.field-note= field.note

mixin initialField_relationship(field, submitted)
	if !field.many
		- var refList = field.refList
		.field.type-relationship
			label.field-label= field.label
			.field-ui
				input(type='hidden',
					name=field.path,
					id='field_' + field.path,
					value=submitted[field.path],
					data-ref-path=refList.path,
					data-ref-singular=refList.singular,
					data-ref-plural=refList.plural).ui-select2-ref
				if field.note
					.field-note= field.note

